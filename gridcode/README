more details to come later...

Installation:
=============

install atlastools:

    git clone git://github.com/ndawe/atlastools.git

or if you insist on using an inferior VCS such as Subversion:
    
    svn checkout http://svn.github.com/ndawe/atlastools.git atlastools

Follow the README in atlastools for installation instructions

If you also want to test the code locally then you will need to install rootpy and goodruns.
Same procedure as above, just use these urls:

    git://github.com/ndawe/rootpy.git (or http://svn.github.com/ndawe/rootpy.git if you want to "svn checkout")

    git://github.com/ndawe/goodruns.git (or http://svn.github.com/ndawe/goodruns.git if you want to "svn checkout")

and be sure to use at least Python version 2.6 (2.7 is preferred).
These additional packages (along with Python 2.7 and ROOT 5.30) are downloaded and installed automatically on the grid
in the setup.sh script.


A tour of the code:
===================

The main code which loops over all events is in HTauProcessor.py.
Event and object filters are defined in filters.py.
"TreeModels" are defined in models.py. These define the branches of the output ntuples.
tautools.py provides utilities for processing MC taus in the MC block of the D3PDs.
mixins.py defines "mixin" classes to add functionality to objects defined by TTree branches.


Submitting jobs to the Grid:
============================

Make sure you have pandatools setup and run this (replace NoelDawe with your grid name and set --version to whatever you want):

    grid-submit -m datasets.cfg -s HTauProcessor -u NoelDawe --version 34 --extFile JERProviderPlots.root VBF*

This will run on all datasets in datasets.yml matching VBF*. Replace VBF* with or append "data" to also run on data, etc.
You may also append arguments understood by prun (i.e. --nFilesPerJob 8) at the end of the command above and they will be passes along to prun.
