#!/usr/bin/env python

import cluster
import run_systematics
#from higgstautau import samples

hosts = cluster.get_hosts('hosts.sfu.txt')
setup = cluster.get_setup('setup.michel.sfu.txt')

datasets = [
    'AcerMC_Wt.mc11c',
    'AlpgenJimmyWenuNp0_pt20.mc11c',
    'AlpgenJimmyWenuNp1_pt20.mc11c',
    'AlpgenJimmyWenuNp2_pt20.mc11c',
    'AlpgenJimmyWenuNp3_pt20.mc11c',
    'AlpgenJimmyWenuNp4_pt20.mc11c',
    'AlpgenJimmyWenuNp5_pt20.mc11c',
    'AlpgenJimmyWmunuNp0_pt20.mc11c',
    'AlpgenJimmyWmunuNp1_pt20.mc11c',
    'AlpgenJimmyWmunuNp2_pt20.mc11c',
    'AlpgenJimmyWmunuNp3_pt20.mc11c',
    'AlpgenJimmyWmunuNp4_pt20.mc11c',
    'AlpgenJimmyWmunuNp5_pt20.mc11c',
    'AlpgenJimmyWtaunuNp0_pt20.mc11c',
    'AlpgenJimmyWtaunuNp1_pt20.mc11c',
    'AlpgenJimmyWtaunuNp2_pt20.mc11c',
    'AlpgenJimmyWtaunuNp3_pt20.mc11c',
    'AlpgenJimmyWtaunuNp4_pt20.mc11c',
    'AlpgenJimmyWtaunuNp5_pt20.mc11c',
    'AlpgenJimmyZeeNp0_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp0_pt20.mc11c',
    'AlpgenJimmyZeeNp1_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp1_pt20.mc11c',
    'AlpgenJimmyZeeNp2_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp2_pt20.mc11c',
    'AlpgenJimmyZeeNp3_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp3_pt20.mc11c',
    'AlpgenJimmyZeeNp4_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp4_pt20.mc11c',
    'AlpgenJimmyZeeNp5_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZeeNp5_pt20.mc11c',
    'AlpgenJimmyZmumuNp0_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp0_pt20.mc11c',
    'AlpgenJimmyZmumuNp1_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp1_pt20.mc11c',
    'AlpgenJimmyZmumuNp2_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp2_pt20.mc11c',
    'AlpgenJimmyZmumuNp3_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp3_pt20.mc11c',
    'AlpgenJimmyZmumuNp4_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp4_pt20.mc11c',
    'AlpgenJimmyZmumuNp5_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZmumuNp5_pt20.mc11c',
    'AlpgenJimmyZtautauNp0_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp0_pt20.mc11c',
    'AlpgenJimmyZtautauNp1_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp1_pt20.mc11c',
    'AlpgenJimmyZtautauNp2_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp2_pt20.mc11c',
    'AlpgenJimmyZtautauNp3_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp3_pt20.mc11c',
    'AlpgenJimmyZtautauNp4_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp4_pt20.mc11c',
    'AlpgenJimmyZtautauNp5_Mll10to40_pt20.mc11c',
    'AlpgenJimmyZtautauNp5_pt20.mc11c',
    'McAtNlo_JIMMY_WmZ_lnull.mc11c',
    'McAtNlo_JIMMY_WmZ_lnuqq.mc11c',
    'McAtNlo_JIMMY_WmZ_lnutautau.mc11c',
    'McAtNlo_JIMMY_WmZ_qqll.mc11c',
    'McAtNlo_JIMMY_WmZ_qqtautau.mc11c',
    'McAtNlo_JIMMY_WmZ_taunull.mc11c',
    'McAtNlo_JIMMY_WmZ_taunutautau.mc11c',
    'McAtNlo_JIMMY_WpWm_enuenu.mc11c',
    'McAtNlo_JIMMY_WpWm_enumunu.mc11c',
    'McAtNlo_JIMMY_WpWm_enutaunu.mc11c',
    'McAtNlo_JIMMY_WpWm_munuenu.mc11c',
    'McAtNlo_JIMMY_WpWm_munumunu.mc11c',
    'McAtNlo_JIMMY_WpWm_munutaunu.mc11c',
    'McAtNlo_JIMMY_WpWm_taunuenu.mc11c',
    'McAtNlo_JIMMY_WpWm_taunumunu.mc11c',
    'McAtNlo_JIMMY_WpWm_taunutaunu.mc11c',
    'McAtNlo_JIMMY_WpZ_lnull.mc11c',
    'McAtNlo_JIMMY_WpZ_lnuqq.mc11c',
    'McAtNlo_JIMMY_WpZ_lnutautau.mc11c',
    'McAtNlo_JIMMY_WpZ_qqll.mc11c',
    'McAtNlo_JIMMY_WpZ_qqtautau.mc11c',
    'McAtNlo_JIMMY_WpZ_taunull.mc11c',
    'McAtNlo_JIMMY_WpZ_taunutautau.mc11c',
    'McAtNlo_JIMMY_ZZ_2l2tau.mc11c',
    'McAtNlo_JIMMY_ZZ_4tau.mc11c',
    'McAtNlo_JIMMY_ZZ_llll.mc11c',
    'McAtNlo_JIMMY_ZZ_llnunu.mc11c',
    'McAtNlo_JIMMY_ZZ_llqq.mc11c',
    'McAtNlo_JIMMY_ZZ_tautaununu.mc11c',
    'McAtNlo_JIMMY_ZZ_tautauqq.mc11c',
    'T1_McAtNlo_Jimmy.mc11c',
    'TTbar_FullHad_McAtNlo_Jimmy.mc11c',
    'gg2WW0240_JIMMY_WW_enuenu.mc11c',
    'gg2WW0240_JIMMY_WW_enutaunu.mc11c',
    'gg2WW0240_JIMMY_WW_munuenu.mc11c',
    'gg2WW0240_JIMMY_WW_munumunu.mc11c',
    'gg2WW0240_JIMMY_WW_munutaunu.mc11c',
    'gg2WW0240_JIMMY_WW_taunuenu.mc11c',
    'gg2WW0240_JIMMY_WW_taunutaunu.mc11c',
    'st_schan_enu_AcerMC.mc11c',
    'st_schan_munu_AcerMC.mc11c',
    'st_schan_taunu_AcerMC.mc11c',
    'st_tchan_enu_AcerMC.mc11c',
    'st_tchan_munu_AcerMC.mc11c',
    'st_tchan_taunu_AcerMC.mc11c',
    'PowHegPythia_VBFH100_tautaulh.mc11c',
    'PowHegPythia_VBFH105_tautaulh.mc11c',
    'PowHegPythia_VBFH110_tautaulh.mc11c',
    'PowHegPythia_VBFH115_tautaulh.mc11c',
    'PowHegPythia_VBFH120_tautaulh.mc11c',
    'PowHegPythia_VBFH125_tautaulh.mc11c',
    'PowHegPythia_VBFH130_tautaulh.mc11c',
    'PowHegPythia_VBFH135_tautaulh.mc11c',
    'PowHegPythia_VBFH140_tautaulh.mc11c',
    'PowHegPythia_VBFH145_tautaulh.mc11c',
    'PowHegPythia_VBFH150_tautaulh.mc11c',
    'PowHegPythia_ggH100_tautaulh.mc11c',
    'PowHegPythia_ggH105_tautaulh.mc11c',
    'PowHegPythia_ggH110_tautaulh.mc11c',
    'PowHegPythia_ggH115_tautaulh.mc11c',
    'PowHegPythia_ggH120_tautaulh.mc11c',
    'PowHegPythia_ggH125_tautaulh.mc11c',
    'PowHegPythia_ggH130_tautaulh.mc11c',
    'PowHegPythia_ggH135_tautaulh.mc11c',
    'PowHegPythia_ggH140_tautaulh.mc11c',
    'PowHegPythia_ggH145_tautaulh.mc11c',
    'PowHegPythia_ggH150_tautaulh.mc11c'
    ]

"""  or you can list datasets like:
datasets = [
    # EW background
    "AlpgenJimmyZtautauNp[0-5]_pt20.mc11c",
    "AlpgenJimmyZtautauNp[0-5]_Mll10to40_pt20.mc11c",
    "AlpgenJimmyWtaunuNp[0-5]_pt20.mc11c",
    "AlpgenJimmyZmumuNp[0-5]_pt20.mc11c",
    "AlpgenJimmyZmumuNp[0-5]_Mll10to40_pt20.mc11c",
    "AlpgenJimmyWmunuNp[0-5]_pt20.mc11c",
    "AlpgenJimmyZeeNp[0-5]_pt20.mc11c",
    "AlpgenJimmyZeeNp[0-5]_Mll10to40_pt20.mc11c",
    "AlpgenJimmyWenuNp[0-5]_pt20.mc11c",
    # Top
    "st_*",
    "AcerMC_Wt.mc11c",
    "T1_McAtNlo_Jimmy.mc11c",
    "TTbar_FullHad_McAtNlo_Jimmy.mc11c",
    # Diboson
    "gg2WW0240_JIMMY_WW_*",
    "McAtNlo_JIMMY_WmZ_*",
    "McAtNlo_JIMMY_WpWm_*",
    "McAtNlo_JIMMY_WpZ_*",
    "McAtNlo_JIMMY_ZZ_*",
    # signal
    "PowHegPythia_VBFH*_tautauhh.mc11c",
    "PowHegPythia_ggH*_tautauhh.mc11c",
    "PythiaZH*_tautauhh.mc11c",
    "PythiaWH*_tautauhh.mc11c",
]
"""

# nominal values
# cluster.run('eLHProcessor.py',
#             db='datasets_elh',
#             datasets=datasets,
#             hosts=hosts,
#             nproc=5,
#             nice=10,
#             setup=setup,
#             use_qsub=True)

# systematics
run_systematics.run('EHAD',
            'eLHProcessor.py',
            db='datasets_elh',
            datasets=datasets,
            hosts=hosts,
            nproc=5,
            nice=10,
            setup=setup,
            use_qsub=True)
